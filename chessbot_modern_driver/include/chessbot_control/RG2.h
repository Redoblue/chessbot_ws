// Generated by gencpp from file chessbot_control/RG2.msg
// DO NOT EDIT!


#ifndef CHESSBOT_CONTROL_MESSAGE_RG2_H
#define CHESSBOT_CONTROL_MESSAGE_RG2_H

#include <ros/service_traits.h>


#include <chessbot_control/RG2Request.h>
#include <chessbot_control/RG2Response.h>


namespace chessbot_control
{

struct RG2
{

typedef RG2Request Request;
typedef RG2Response Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RG2
} // namespace chessbot_control


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::chessbot_control::RG2 > {
  static const char* value()
  {
    return "e9f43d43d0606566dbbf901fbd3b24a0";
  }

  static const char* value(const ::chessbot_control::RG2&) { return value(); }
};

template<>
struct DataType< ::chessbot_control::RG2 > {
  static const char* value()
  {
    return "chessbot_control/RG2";
  }

  static const char* value(const ::chessbot_control::RG2&) { return value(); }
};


// service_traits::MD5Sum< ::chessbot_control::RG2Request> should match 
// service_traits::MD5Sum< ::chessbot_control::RG2 > 
template<>
struct MD5Sum< ::chessbot_control::RG2Request>
{
  static const char* value()
  {
    return MD5Sum< ::chessbot_control::RG2 >::value();
  }
  static const char* value(const ::chessbot_control::RG2Request&)
  {
    return value();
  }
};

// service_traits::DataType< ::chessbot_control::RG2Request> should match 
// service_traits::DataType< ::chessbot_control::RG2 > 
template<>
struct DataType< ::chessbot_control::RG2Request>
{
  static const char* value()
  {
    return DataType< ::chessbot_control::RG2 >::value();
  }
  static const char* value(const ::chessbot_control::RG2Request&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::chessbot_control::RG2Response> should match 
// service_traits::MD5Sum< ::chessbot_control::RG2 > 
template<>
struct MD5Sum< ::chessbot_control::RG2Response>
{
  static const char* value()
  {
    return MD5Sum< ::chessbot_control::RG2 >::value();
  }
  static const char* value(const ::chessbot_control::RG2Response&)
  {
    return value();
  }
};

// service_traits::DataType< ::chessbot_control::RG2Response> should match 
// service_traits::DataType< ::chessbot_control::RG2 > 
template<>
struct DataType< ::chessbot_control::RG2Response>
{
  static const char* value()
  {
    return DataType< ::chessbot_control::RG2 >::value();
  }
  static const char* value(const ::chessbot_control::RG2Response&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CHESSBOT_CONTROL_MESSAGE_RG2_H
